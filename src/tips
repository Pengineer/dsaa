1，如果递增步长是1，则时间复杂度是1，n，n^2，n^3...
     如果递增步长是*2/*3等（决定底数），或则涉及折半，则时间复杂度是O(logn)；如果在嵌套个递增步长是1的循环，那就是O(nlogn)。

2，堆排序的常见额外空间复杂度是O(logn)，也就是递归实现，如果要求额外空间复杂度O(1)，那么就是说要改写为非递归实现。

3，常见的时间复杂度为O(nlogn)的排序算法有：快排、堆排序、归并、希尔。

4，希尔排序的时间复杂度是O(nlogn)里面最慢的，它的时间复杂度的好坏完全取决于步长的选择，能说明理由。

5，快排并不是在任何时候都是最优解。比如数组本身已经排好序了，而每一轮排序的时候都是以最后一个数字作为比较的标准，
      此时快排的效率只有O(n^2)。因此面试时，需要问清楚这个排序应用的环境是什么（对什么样的数字，数据量）、
      有哪些约束条件、时间复杂度和额外空间复杂度的要求等。
      
6，要求实现时间复杂度是O(n)的排序：hash表（计数），荷兰国旗问题。
